{"version":3,"sources":["src/hooks/useEthereum.tsx","src/context/EthersContext.tsx","src/context/GlobalContext.tsx","src/context/index.tsx","src/constants/dimension.ts","src/constants/colors.ts","src/hooks/useColors.tsx","src/components/DarkModeSwitch.tsx","src/components/FlexView.tsx","src/components/Text.tsx","src/components/web/MobileWebMenu.tsx","src/components/web/WebHeader.tsx","src/components/BodyInput.tsx","src/components/Container.tsx","src/components/Content.tsx","src/components/Button.tsx","src/components/EditControls.tsx","src/components/Loading.tsx","src/components/MarkdownView.tsx","src/components/Title.tsx","src/components/PreviewModal.tsx","src/components/TitleInput.tsx","src/constants/contracts.ts","src/hooks/usePostState.tsx","src/components/web/ConnectToWallet.tsx","src/screens/Screen.tsx","src/screens/EditScreen.tsx","src/screens/EmptyScreen.tsx","src/screens/NewScreen.tsx","src/components/CeneteredModal.tsx","src/hooks/useFormattedAddress.tsx","src/hooks/useLinker.tsx","src/screens/ViewScreen.tsx","src/screens/index.tsx","App.tsx","globals.js","assets/metamask-dark.png","assets/metamask.png","node_modules/moment/locale sync /^/.//.*$"],"names":["useEthereum","window","ethereum","EthersContext","React","createContext","provider","undefined","signer","chainId","address","ensName","ethers","providers","AlchemyProvider","mainnetProvider","EthersContextProvider","children","useState","setChainId","setSigner","setAddress","setENSName","useAsyncEffect","a","async","web3","Web3Provider","getSigner","useEffect","onAccountsChanged","request","method","accounts","onChainChanged","Number","on","off","lookupAddress","ens","Provider","value","Consumer","GlobalContext","load","clear","darkMode","setDarkMode","_darkMode","GlobalContextProvider","colorScheme","useColorScheme","AsyncStorage","getItem","mode","removeItem","setItem","String","ContextProvider","SCREEN_WIDTH","Math","round","Dimensions","get","width","SCREEN_HEIGHT","height","IS_DESKTOP","Spacing","tiny","small","normal","large","huge","Colors","common","white","transparent","primary","secondary","green","red","twitter","facebook","light","accent","header","submenu","background","backgroundLight","border","borderDark","textDark","textMedium","textLight","disabled","shadow","placeholder","overlay","dark","useColors","useContext","DarkModeSwitch","props","onChange","useCallback","View","style","transform","scale","FlexView","flexDirection","direction","Text","fontFamily","fontWeight","color","medium","note","h1Style","h2Style","h3Style","h4Style","fontSize","caption","CloseButton","onPress","type","name","size","MobileWebMenuItem","title","path","match","useRouteMatch","active","startsWith","to","textDecoration","marginBottom","MobileWebMenu","expanded","onCollapse","animationType","visible","TouchableWithoutFeedback","justifyContent","alignItems","paddingRight","paddingBottom","backgroundColor","marginTop","Title","alignSelf","Menu","marginLeft","marginRight","MenuItem","MenuIcon","onExpand","WebHeader","position","top","zIndex","flex","paddingTop","paddingHorizontal","onExpandMenu","BodyInput","state","multiline","editable","writing","body","onChangeText","setBody","inputStyle","lineHeight","textAlignVertical","minHeight","Platform","OS","outline","containerStyle","inputContainerStyle","borderBottomWidth","Container","select","web","ScrollView","contentContainerStyle","default","SafeAreaView","Content","paddingVertical","Button","loading","loadingProps","buttonStyle","titleStyle","disabledTitleStyle","borderColor","disabledStyle","EditControls","onPreview","update","create","Loading","ActivityIndicator","marginVertical","MarkdownView","text","styles","heading1","heading2","heading3","heading4","heading5","heading6","code_inline","padding","paragraph","bullet_list","ordered_list","onLinkPress","url","open","PreviewModal","setOpen","TitleInput","autoFocus","setTitle","getBlog","signerOrProvider","Contract","Blog","abi","usePostState","hash","revision","history","useHistory","post","setPost","reading","setReading","setWriting","blog","getPost","fetched","numberOfRevisions","length","Promise","all","Array","fill","map","_","index","revisionAt","revisions","constants","HashZero","tx","wait","receipt","push","events","args","ConnectWallet","metaMask","isMetaMask","source","require","Image","alert","marginHorizontal","WebScreen","allowRead","right","bottom","left","textAlign","ConnectToWallet","Editor","EditScreen","useParams","Screen","EmptyScreen","NewScreen","CenteredModal","useFormattedAddress","substring","useLinker","target","NotFound","PostView","addr","author","onViewAddress","noRevision","date","updatedAt","createdAt","isAuthor","toLowerCase","textDecorationLine","moment","Date","toNumber","format","AuthorControls","onEdit","RevisionsModal","slice","reverse","key","Revision","goToPost","ViewScreen","AddressZero","Screens","WebScreens","menuExpanded","setMenuExpanded","fallback","App","useFonts","SourceCodePro_200ExtraLight","regular","CutiveMono_400Regular","bold","SourceCodePro_700Bold","AppLoading","global","Buffer","module","exports","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve"],"mappings":"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","file":"static/js/app.a3b68b4d.chunk.js","sourcesContent":["import { EventType, Listener } from \"@ethersproject/abstract-provider\";\n\nconst useEthereum = () => {\n    return window.ethereum;\n};\n\ninterface JsonRPCRequest {\n    jsonrpc: string;\n    method: string;\n    params: any[];\n    id: number;\n}\n\ninterface JsonRPCResponse {\n    jsonrpc: string;\n    id: number;\n    result?: any;\n    error?: string;\n}\n\ninterface Callback<ResultType> {\n    (error: Error): void;\n    (error: null, val: ResultType): void;\n}\n\ninterface RequestArguments {\n    method: string;\n    params?: unknown[] | object;\n}\n\ninterface Ethereum {\n    chainId: string;\n    isMetaMask: boolean;\n    send(payload: any, callback: any): any;\n    send(payload: JsonRPCRequest, callback: Callback<JsonRPCResponse>): any;\n    request(args: RequestArguments): Promise<any>;\n    on(eventName: EventType, listener: Listener);\n    off(eventName: EventType, listener: Listener);\n}\n\ndeclare global {\n    interface Window {\n        ethereum?: Ethereum;\n        web3?: {\n            currentProvider?: Ethereum;\n        };\n    }\n}\n\nexport default useEthereum;\n","import React, { useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport useEthereum from \"../hooks/useEthereum\";\n\nexport const EthersContext = React.createContext({\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null\n});\n\nexport const provider = new ethers.providers.AlchemyProvider(42, \"eRvHBkwNnm65K0KiQbNihiTyjktIGtbo\");\nexport const mainnetProvider = new ethers.providers.AlchemyProvider(1, \"FC2Xho94WG7hi67GhLb7Rf-9TdKRqz0p\");\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    const ethereum = useEthereum();\n    const [chainId, setChainId] = useState<number>(1);\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n\n    useAsyncEffect(async () => {\n        if (ethereum) {\n            const web3 = new ethers.providers.Web3Provider(ethereum);\n            setSigner(await web3.getSigner());\n        }\n    }, [ethereum]);\n\n    useEffect(() => {\n        if (ethereum) {\n            const onAccountsChanged = async () => {\n                if (ethereum) {\n                    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n                    if (accounts?.[0]) {\n                        setAddress(accounts[0]);\n                    }\n                }\n            };\n            const onChainChanged = () => {\n                if (ethereum) {\n                    setChainId(Number(ethereum.chainId));\n                }\n            };\n            onAccountsChanged();\n            onChainChanged();\n            ethereum.on(\"accountsChanged\", onAccountsChanged);\n            ethereum.on(\"chainChanged\", onChainChanged);\n            return () => {\n                ethereum?.off(\"accountsChanged\", onAccountsChanged);\n                ethereum?.off(\"chainChanged\", onAccountsChanged);\n            };\n        }\n    }, [ethereum]);\n\n    useAsyncEffect(async () => {\n        if (address) {\n            const ens = await mainnetProvider.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [address]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                provider,\n                signer,\n                chainId,\n                address,\n                ensName\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    darkMode: false,\n    setDarkMode: async _darkMode => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                },\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const HEADER_WIDTH = 840;\nexport const DESKTOP_CONTENT_WIDTH = 840;\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const IS_DESKTOP = SCREEN_WIDTH > HEADER_WIDTH;\nexport const HEADER_HEIGHT = 64;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#291C64\",\n        secondary: \"#9BECEE\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#291C64\",\n        header: \"#ffffffb8\",\n        submenu: \"#ffffffb8\",\n        background: \"#f8f8f8\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#e5e5e5\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#888888\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#b4b4b4\",\n        overlay: \"#ffffffc0\"\n    },\n    dark: {\n        accent: \"#9BECEE\",\n        header: \"#000000\",\n        submenu: \"#121212\",\n        background: \"#121212\",\n        backgroundLight: \"#1a1a1a\",\n        border: \"#ffffff33\",\n        borderDark: \"#666666\",\n        textDark: \"#d5d1cc\",\n        textMedium: \"#cccccc\",\n        textLight: \"#aaaaaa\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\",\n        overlay: \"#000000c0\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = () => {\n    const { darkMode } = useContext(GlobalContext);\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import React, { useCallback, useContext } from \"react\";\nimport { View } from \"react-native\";\n\nimport Switch from \"expo-dark-mode-switch\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst DarkModeSwitch = props => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const onChange = useCallback(\n        async dark => {\n            await setDarkMode(dark);\n        },\n        [setDarkMode]\n    );\n    return (\n        <View style={props.style}>\n            <Switch\n                value={darkMode}\n                onChange={onChange}\n                style={{\n                    transform: [\n                        {\n                            scale: 0.75\n                        }\n                    ]\n                }}\n            />\n        </View>\n    );\n};\n\nexport default DarkModeSwitch;\n","import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n","import React from \"react\";\nimport { TouchableWithoutFeedback, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Modal from \"modal-react-native-web\";\nimport { Spacing } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nconst MobileWebMenu = ({ expanded, onCollapse }) => {\n    const { overlay } = useColors();\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={expanded}>\n            <TouchableWithoutFeedback style={{ height: \"100%\" }} onPress={onCollapse}>\n                <View\n                    style={{\n                        height: \"100%\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"flex-end\",\n                        paddingRight: Spacing.normal,\n                        paddingBottom: Spacing.normal,\n                        backgroundColor: overlay\n                    }}>\n                    <FlexView style={{ marginTop: Spacing.small }}>\n                        <DarkModeSwitch style={{ marginTop: -2 }} />\n                        <CloseButton onPress={onCollapse} />\n                    </FlexView>\n                    <View style={{ alignItems: \"flex-end\" }}>\n                        <View style={{ height: Spacing.large }} />\n                        <MobileWebMenuItem title={\"New Post\"} path={\"/\"} />\n                    </View>\n                </View>\n            </TouchableWithoutFeedback>\n        </Modal>\n    );\n};\n\nconst CloseButton = ({ onPress }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textDark} size={32} onPress={onPress} />;\n};\n\nconst MobileWebMenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ textDecoration: \"none\", marginBottom: Spacing.tiny }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 24,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default MobileWebMenu;\n","import React, { FC, useContext } from \"react\";\nimport { View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebHeaderProps {\n    onExpandMenu?: () => void;\n}\n\nconst WebHeader: FC<WebHeaderProps> = props => {\n    const { header } = useColors();\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                {IS_DESKTOP ? <Menu /> : <MenuIcon onExpand={props.onExpandMenu} />}\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { textDark, white } = useColors();\n    const color = darkMode ? white : textDark;\n    return (\n        <View style={{ alignSelf: \"center\", alignItems: \"center\" }}>\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                <Text style={{ fontSize: 28, color }}>web3md.io</Text>\n            </Link>\n        </View>\n    );\n};\n\nconst Menu = () => {\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"center\"\n            }}>\n            <MenuItem title={\"New Post\"} path={\"/\"} />\n            <DarkModeSwitch style={{ marginLeft: Spacing.small, marginRight: -8 }} />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, textDecoration: \"none\" }}>\n            <Text style={{ fontFamily: \"regular\", fontSize: 18, color: active ? textDark : textLight }}>{title}</Text>\n        </Link>\n    );\n};\n\nconst MenuIcon = ({ onExpand }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"menu\"} size={28} color={textDark} onPress={onExpand} />;\n};\n\nexport default WebHeader;\n","import React from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport { PostState } from \"../hooks/usePostState\";\n\nconst BodyInput = ({ state }: { state: PostState }) => {\n    const { textDark } = useColors();\n    return (\n        <Input\n            multiline={true}\n            placeholder={\"Tell your story...\"}\n            editable={!state.writing}\n            value={state.body}\n            onChangeText={state.setBody}\n            inputStyle={[\n                {\n                    fontSize: 15,\n                    fontFamily: \"regular\",\n                    lineHeight: 27.5,\n                    paddingBottom: 4,\n                    color: textDark,\n                    textAlignVertical: \"top\",\n                    minHeight: 80,\n                    height: \"100%\"\n                },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {}\n            ]}\n            containerStyle={{ paddingHorizontal: 0, flex: 1 }}\n            inputContainerStyle={{ borderBottomWidth: 0, height: \"100%\" }}\n            style={{ marginTop: Spacing.small, flex: 1 }}\n        />\n    );\n};\n\nexport default BodyInput;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\nconst Container: FC<ContainerProps> = props => {\n    return Platform.select({\n        web: (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n};\n\nexport default Container;\n","import React from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { DESKTOP_CONTENT_WIDTH, IS_DESKTOP, Spacing } from \"../constants/dimension\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    width: IS_DESKTOP ? DESKTOP_CONTENT_WIDTH : \"100%\",\n                    alignSelf: \"center\",\n                    paddingHorizontal: Spacing.normal,\n                    paddingVertical: Spacing.large\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { primary, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            loadingProps={{ color: textMedium }}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\"\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[\n                { fontSize, fontFamily, color: type === \"solid\" ? \"white\" : props.color || textMedium },\n                props.titleStyle\n            ]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[\n                { backgroundColor: type === \"solid\" ? props.color || primary : \"transparent\", borderColor: \"red\" },\n                props.style\n            ]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport { PostState } from \"../hooks/usePostState\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\n\nconst EditControls = ({ state, onPreview, update }: { state: PostState; onPreview: () => void; update?: boolean }) => {\n    const { accent, textLight } = useColors();\n    return (\n        <FlexView style={{ width: \"100%\", paddingVertical: Spacing.small, justifyContent: \"flex-end\" }}>\n            <Button type={\"clear\"} title={\"Preview\"} color={textLight} onPress={onPreview} />\n            <Button\n                type={\"clear\"}\n                title={update ? \"Update\" : \"Publish\"}\n                color={accent}\n                disabled={!state.title || !state.body}\n                loading={state.writing}\n                onPress={update ? state.update : state.create}\n            />\n        </FlexView>\n    );\n};\n\nexport default EditControls;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React from \"react\";\nimport Markdown from \"react-native-markdown-display\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst MarkdownView = ({ text }) => {\n    const { textDark, accent, backgroundLight } = useColors();\n    const styles = {\n        heading1: { fontFamily: \"bold\", marginTop: Spacing.normal, marginBottom: Spacing.tiny },\n        heading2: { fontFamily: \"bold\", marginTop: Spacing.normal, marginBottom: Spacing.tiny },\n        heading3: { fontFamily: \"bold\", marginTop: Spacing.small, marginBottom: Spacing.tiny },\n        heading4: { fontFamily: \"bold\", marginTop: Spacing.small },\n        heading5: { fontFamily: \"bold\", marginTop: Spacing.tiny },\n        heading6: { fontFamily: \"bold\", marginTop: Spacing.tiny },\n        body: { fontFamily: \"regular\", color: textDark, fontSize: 20, lineHeight: 40 },\n        code_inline: { padding: 2, color: accent, backgroundColor: backgroundLight },\n        paragraph: { paddingBottom: Spacing.normal },\n        bullet_list: { paddingBottom: Spacing.small },\n        ordered_list: { paddingBottom: Spacing.small }\n    };\n    return (\n        <Markdown\n            onLinkPress={url => {\n                window.open(url, \"_blank\");\n                return false;\n            }}\n            style={styles}>\n            {text}\n        </Markdown>\n    );\n};\n\nexport default MarkdownView;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n    style?: TextStyle;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text fontWeight={\"bold\"} style={[{ marginBottom: Spacing.tiny, fontSize: 40 }, props.style]}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import React from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\n\nimport Modal from \"modal-react-native-web\";\nimport { HEADER_HEIGHT, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport { PostState } from \"../hooks/usePostState\";\nimport Content from \"./Content\";\nimport FlexView from \"./FlexView\";\nimport MarkdownView from \"./MarkdownView\";\nimport Text from \"./Text\";\nimport Title from \"./Title\";\n\nconst PreviewModal = ({\n    state,\n    open,\n    setOpen\n}: {\n    state: PostState;\n    open: boolean;\n    setOpen: (open: boolean) => void;\n}) => {\n    const { textDark, backgroundLight } = useColors();\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={open}>\n            <Content\n                style={{\n                    backgroundColor: backgroundLight,\n                    height: \"100%\",\n                    marginTop: HEADER_HEIGHT,\n                    paddingVertical: Spacing.normal\n                }}>\n                <FlexView style={{ alignItems: \"center\" }}>\n                    <Text style={{ flex: 1, fontSize: 24 }}>Preview</Text>\n                    <Icon\n                        type={\"material-community\"}\n                        name={\"close\"}\n                        onPress={() => setOpen(false)}\n                        size={32}\n                        color={textDark}\n                    />\n                </FlexView>\n                <Title text={state.title} style={{ marginTop: Spacing.normal }} />\n                <View style={{ height: Spacing.small }} />\n                <ScrollView style={{ flex: 1 }}>\n                    <MarkdownView text={state.body} />\n                </ScrollView>\n            </Content>\n        </Modal>\n    );\n};\n\nexport default PreviewModal;\n","import React from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\nimport { PostState } from \"../hooks/usePostState\";\n\nconst TitleInput = ({ state }: { state: PostState }) => {\n    const { textDark } = useColors();\n    return (\n        <Input\n            autoFocus={true}\n            placeholder={\"Title\"}\n            editable={!state.writing}\n            value={state.title}\n            onChangeText={state.setTitle}\n            inputStyle={[\n                {\n                    width: \"100%\",\n                    fontSize: 40,\n                    fontFamily: \"regular\",\n                    paddingBottom: 4,\n                    color: textDark\n                },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {}\n            ]}\n            containerStyle={{ paddingHorizontal: 0 }}\n            inputContainerStyle={{ borderBottomWidth: 0 }}\n        />\n    );\n};\n\nexport default TitleInput;\n","import Blog from \"@web3md/contracts/deployments/kovan/Blog.json\";\nimport { ethers } from \"ethers\";\n\nexport const getBlog = (signerOrProvider: ethers.Signer | ethers.providers.Provider) => {\n    return new ethers.Contract(Blog.address, Blog.abi, signerOrProvider);\n};\n","import { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { getBlog } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Post from \"../types/Post\";\n\nexport interface PostState {\n    reading: boolean;\n    writing: boolean;\n    setWriting: (writing: boolean) => void;\n    post: Post | undefined;\n    title: string;\n    setTitle: (_title: string) => void;\n    body: string;\n    setBody: (_body: string) => void;\n    create: () => Promise<void>;\n    update: () => Promise<void>;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst usePostState = (hash?: string, revision?: string): PostState => {\n    const history = useHistory();\n    const { provider, signer } = useContext(EthersContext);\n    const [post, setPost] = useState<Post>();\n    const [reading, setReading] = useState(false);\n    const [writing, setWriting] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n\n    useAsyncEffect(async () => {\n        if (hash && provider) {\n            setReading(true);\n            try {\n                const blog = getBlog(provider);\n                const fetched = await blog.getPost(hash);\n                const length = Number(await blog.numberOfRevisions(hash));\n                const revisions = await Promise.all(\n                    new Array(length).fill(0).map((_, index) => blog.revisionAt(hash, index))\n                );\n                setPost({\n                    ...fetched,\n                    revisions\n                });\n                if (revision === undefined || !revisions || Number(revision) >= revisions.length) {\n                    setTitle(fetched.title);\n                    setBody(fetched.body);\n                } else {\n                    setTitle(revisions[revision].title);\n                    setBody(revisions[revision].body);\n                }\n            } finally {\n                setReading(false);\n            }\n        }\n    }, [hash, provider]);\n\n    const create = async () => {\n        if (title && body && signer) {\n            setWriting(true);\n            try {\n                const blog = getBlog(signer);\n                const tx = await blog.create(title, body, ethers.constants.HashZero);\n                const receipt = await tx.wait();\n                history.push(\"/post/\" + receipt.events[0].args.hash);\n            } finally {\n                setWriting(false);\n            }\n        }\n    };\n\n    const update = async () => {\n        if (hash && title && body && signer) {\n            setWriting(true);\n            try {\n                const blog = getBlog(signer);\n                const tx = await blog.update(hash, title, body);\n                const receipt = await tx.wait();\n                history.push(\"/post/\" + receipt.events[0].args.hash);\n            } finally {\n                setWriting(false);\n            }\n        }\n    };\n\n    return { reading, writing, setWriting, post, title, setTitle, body, setBody, create, update };\n};\n\nexport default usePostState;\n","import React, { useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useEthereum from \"../../hooks/useEthereum\";\nimport Button from \"../Button\";\n\nconst ConnectWallet = () => {\n    const { primary } = useColors();\n    const { darkMode } = useContext(GlobalContext);\n    const ethereum = useEthereum();\n    const onPress = async () => {\n        if (ethereum) {\n            await ethereum.request({ method: \"eth_requestAccounts\" });\n        } else {\n            alert(\"No ethereum provider found.\");\n        }\n    };\n    const metaMask = ethereum?.isMetaMask || false;\n    const source = darkMode ? require(\"../../../assets/metamask-dark.png\") : require(\"../../../assets/metamask.png\");\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Image source={source} style={{ width: metaMask ? 223 : 200, height: metaMask ? 183 : 200 }} />\n            <Button\n                size={\"large\"}\n                color={metaMask ? \"#e2761b\" : primary}\n                onPress={onPress}\n                title={\"Connect\"}\n                containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n                style={{ marginTop: Spacing.large, marginHorizontal: Spacing.normal }}\n            />\n        </View>\n    );\n};\nexport default ConnectWallet;\n","import React, { FC, useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport Text from \"../components/Text\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\n\nexport interface ScreenProps extends ViewProps {\n    allowRead?: boolean;\n}\n\nconst WebScreen: FC<ScreenProps> = props => {\n    const { address, chainId } = useContext(EthersContext);\n    if (!props.allowRead && !address) return <ConnectToWallet />;\n    if (!props.allowRead && chainId !== 42)\n        return (\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n                <Text light={true} style={{ textAlign: \"center\" }}>\n                    {\"Please switch network to\\n'Kovan'\"}\n                </Text>\n            </View>\n        );\n    return (\n        <View\n            {...props}\n            style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n        />\n    );\n};\n\nexport default WebScreen;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport { useParams } from \"react-router-dom\";\n\nimport BodyInput from \"../components/BodyInput\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport EditControls from \"../components/EditControls\";\nimport Loading from \"../components/Loading\";\nimport PreviewModal from \"../components/PreviewModal\";\nimport TitleInput from \"../components/TitleInput\";\nimport usePostState, { PostState } from \"../hooks/usePostState\";\nimport Screen from \"./Screen\";\n\nconst EditScreen = () => {\n    const { hash, revision } = useParams();\n    const state = usePostState(hash, revision);\n    const [open, setOpen] = useState(false);\n    return (\n        <Screen>\n            <Container>\n                <Content style={{ height: \"100%\", paddingBottom: 0 }}>\n                    {state.post ? <Editor state={state} onPreview={() => setOpen(true)} /> : <Loading />}\n                </Content>\n            </Container>\n            <PreviewModal state={state} open={open} setOpen={setOpen} />\n        </Screen>\n    );\n};\n\nconst Editor = ({ state, onPreview }: { state: PostState; onPreview: () => void }) => {\n    return (\n        <View style={{ height: \"100%\" }}>\n            <TitleInput state={state} />\n            <BodyInput state={state} />\n            <EditControls state={state} onPreview={onPreview} update={true} />\n        </View>\n    );\n};\n\nexport default EditScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Title from \"../components/Title\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport useColors from \"../hooks/useColors\";\nimport Screen from \"./Screen\";\n\nconst EmptyScreen = () => {\n    const { background } = useColors();\n    return (\n        <View style={{ width: \"100%\", height: \"100%\", backgroundColor: background }}>\n            <Screen>\n                <Container>\n                    <Content>\n                        <Title text={\"Loading...\"} style={{ fontFamily: \"code\" }} />\n                    </Content>\n                </Container>\n            </Screen>\n            <WebHeader />\n        </View>\n    );\n};\n\nexport default EmptyScreen;\n","import React, { useState } from \"react\";\n\nimport BodyInput from \"../components/BodyInput\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport EditControls from \"../components/EditControls\";\nimport PreviewModal from \"../components/PreviewModal\";\nimport TitleInput from \"../components/TitleInput\";\nimport usePostState from \"../hooks/usePostState\";\nimport Screen from \"./Screen\";\n\nconst NewScreen = () => {\n    const state = usePostState();\n    const [open, setOpen] = useState(false);\n    return (\n        <Screen>\n            <Container>\n                <Content style={{ height: \"100%\", paddingBottom: 0 }}>\n                    <TitleInput state={state} />\n                    <BodyInput state={state} />\n                    <EditControls state={state} onPreview={() => setOpen(true)} />\n                </Content>\n            </Container>\n            <PreviewModal state={state} open={open} setOpen={setOpen} />\n        </Screen>\n    );\n};\n\nexport default NewScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport Modal from \"modal-react-native-web\";\nimport useColors from \"../hooks/useColors\";\n\nconst CenteredModal = props => {\n    const { overlay } = useColors();\n    return (\n        <Modal animationType=\"fade\" transparent={true} visible={props.visible}>\n            <View\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    backgroundColor: overlay\n                }}>\n                {props.children}\n            </View>\n        </Modal>\n    );\n};\n\nexport default CenteredModal;\n","import { useState } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { mainnetProvider } from \"../context/EthersContext\";\n\nconst useFormattedAddress = (address: string) => {\n    const [ensName, setENSName] = useState<string | null>(null);\n    useAsyncEffect(async () => {\n        setENSName(await mainnetProvider.lookupAddress(address));\n    }, [address]);\n    return ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length);\n};\n\nexport default useFormattedAddress;\n","import { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useLinker = (path: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nexport default useLinker;\n","import React, { useContext, useState } from \"react\";\nimport { View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { useParams } from \"react-router-dom\";\n\nimport { ethers } from \"ethers\";\nimport moment from \"moment\";\nimport Button from \"../components/Button\";\nimport CenteredModal from \"../components/CeneteredModal\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport FlexView from \"../components/FlexView\";\nimport Loading from \"../components/Loading\";\nimport MarkdownView from \"../components/MarkdownView\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport { SCREEN_WIDTH, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useFormattedAddress from \"../hooks/useFormattedAddress\";\nimport useLinker from \"../hooks/useLinker\";\nimport usePostState from \"../hooks/usePostState\";\nimport Screen from \"./Screen\";\n\nconst ViewScreen = () => {\n    const { hash, revision } = useParams();\n    const state = usePostState(hash);\n    const [open, setOpen] = useState(false);\n    return (\n        <Screen allowRead={true}>\n            <Container>\n                <Content>\n                    {state.reading ? (\n                        <Loading />\n                    ) : !state.post || state.post.author === ethers.constants.AddressZero ? (\n                        <NotFound />\n                    ) : (\n                        <PostView hash={hash} post={state.post} revision={revision} setOpen={setOpen} />\n                    )}\n                </Content>\n            </Container>\n            {state.post && <RevisionsModal hash={hash} post={state.post} open={open} setOpen={setOpen} />}\n        </Screen>\n    );\n};\n\nconst NotFound = () => (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\", marginVertical: Spacing.huge }}>\n        <Text light={true} style={{ textAlign: \"center\" }}>\n            {\"Post Not Found\"}\n        </Text>\n    </View>\n);\n\nconst PostView = ({ hash, post, revision, setOpen }) => {\n    const { address } = useContext(EthersContext);\n    const addr = useFormattedAddress(post.author);\n    const onViewAddress = useLinker(\"https://etherscan.io/address/\" + post.author, \"_blank\");\n    const noRevision = revision === undefined || revision >= post.revisions.length;\n    const title = noRevision ? post.title : post.revisions[revision].title;\n    const body = noRevision ? post.body : post.revisions[revision].body;\n    const date = noRevision ? post.updatedAt : post.revisions[revision].createdAt;\n    const isAuthor = post?.author?.toLowerCase() === address?.toLowerCase();\n    return (\n        <View>\n            <Title text={title} />\n            <FlexView style={{ justifyContent: \"flex-end\" }}>\n                <Text caption={true}>\n                    Written by{\" \"}\n                    <Text style={{ textDecorationLine: \"underline\" }} onPress={onViewAddress}>\n                        {addr}\n                    </Text>{\" \"}\n                    |{\" \"}\n                    <Text style={{ textDecorationLine: \"underline\" }} onPress={() => setOpen(true)}>\n                        {noRevision ? \"latest\" : \"Revision \" + revision}\n                    </Text>{\" \"}\n                    | {moment(new Date(date.toNumber() * 1000)).format(\"L LT\")}{\" \"}\n                </Text>\n            </FlexView>\n            <View style={{ height: Spacing.huge }} />\n            <MarkdownView text={body} />\n            {isAuthor && <AuthorControls hash={hash} />}\n        </View>\n    );\n};\n\nconst AuthorControls = ({ hash }) => {\n    const onEdit = useLinker(\"/edit/\" + hash);\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ justifyContent: \"flex-end\", marginBottom: Spacing.small }}>\n            <Button type={\"clear\"} color={accent} onPress={onEdit} title={\"Edit\"} />\n        </FlexView>\n    );\n};\n\nconst RevisionsModal = ({ hash, post, open, setOpen }) => {\n    const { backgroundLight, textDark } = useColors();\n    return (\n        <CenteredModal visible={open}>\n            <View\n                style={{\n                    backgroundColor: backgroundLight,\n                    padding: Spacing.normal,\n                    width: SCREEN_WIDTH > 400 ? 400 : \"100%\"\n                }}>\n                <FlexView style={{ alignItems: \"center\", marginBottom: Spacing.small }}>\n                    <Text style={{ flex: 1, fontSize: 24 }}>Revisions</Text>\n                    <Icon type={\"material-community\"} name={\"close\"} onPress={() => setOpen(false)} color={textDark} />\n                </FlexView>\n                {post.revisions\n                    .slice()\n                    .reverse()\n                    .map((revision, index) => (\n                        <Revision\n                            key={index}\n                            hash={hash}\n                            index={post.revisions.length - index - 1}\n                            createdAt={revision.createdAt}\n                            setOpen={setOpen}\n                        />\n                    ))}\n            </View>\n        </CenteredModal>\n    );\n};\n\nconst Revision = ({ hash, index, createdAt, setOpen }) => {\n    const date = new Date(createdAt.toNumber() * 1000);\n    const goToPost = useLinker(\"/post/\" + hash + \"/\" + index);\n    const onPress = () => {\n        goToPost();\n        setOpen(false);\n    };\n    return (\n        <Text onPress={onPress} style={{ textDecorationLine: \"underline\", marginBottom: Spacing.tiny }}>\n            {\"Revision \" + index + \": \" + moment(date).format(\"L LT\")}\n        </Text>\n    );\n};\n\nexport default ViewScreen;\n","import React, { Suspense, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport MobileWebMenu from \"../components/web/MobileWebMenu\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport EditScreen from \"./EditScreen\";\nimport EmptyScreen from \"./EmptyScreen\";\nimport NewScreen from \"./NewScreen\";\nimport ViewScreen from \"./ViewScreen\";\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return <WebScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const [menuExpanded, setMenuExpanded] = useState(false);\n    const { background } = useColors();\n    return (\n        <Router>\n            <Suspense fallback={<EmptyScreen />}>\n                <View style={{ flex: 1, backgroundColor: background }}>\n                    <Switch>\n                        <Route path={\"/post/:hash/:revision\"}>\n                            <ViewScreen />\n                        </Route>\n                        <Route path={\"/post/:hash\"}>\n                            <ViewScreen />\n                        </Route>\n                        <Route path={\"/edit/:hash/:revision\"}>\n                            <EditScreen />\n                        </Route>\n                        <Route path={\"/edit/:hash\"}>\n                            <EditScreen />\n                        </Route>\n                        <Route path={\"/new\"}>\n                            <NewScreen />\n                        </Route>\n                        <Redirect to={\"/new\"} />\n                    </Switch>\n                    <WebHeader onExpandMenu={() => setMenuExpanded(true)} />\n                    {!IS_DESKTOP && <MobileWebMenu expanded={menuExpanded} onCollapse={() => setMenuExpanded(false)} />}\n                </View>\n            </Suspense>\n        </Router>\n    );\n};\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { SourceCodePro_200ExtraLight, SourceCodePro_700Bold, useFonts } from \"@expo-google-fonts/source-code-pro\";\nimport { CutiveMono_400Regular } from \"@expo-google-fonts/cutive-mono\";\nimport { AppLoading } from \"expo\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\n\nexport default function App() {\n    const [fontsLoaded] = useFonts({\n        light: SourceCodePro_200ExtraLight,\n        regular: CutiveMono_400Regular,\n        bold: SourceCodePro_700Bold\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n}\n","global.Buffer = require('buffer').Buffer;\n","module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","var map = {\n\t\"./af\": 250,\n\t\"./af.js\": 250,\n\t\"./ar\": 251,\n\t\"./ar-dz\": 252,\n\t\"./ar-dz.js\": 252,\n\t\"./ar-kw\": 253,\n\t\"./ar-kw.js\": 253,\n\t\"./ar-ly\": 254,\n\t\"./ar-ly.js\": 254,\n\t\"./ar-ma\": 255,\n\t\"./ar-ma.js\": 255,\n\t\"./ar-sa\": 256,\n\t\"./ar-sa.js\": 256,\n\t\"./ar-tn\": 257,\n\t\"./ar-tn.js\": 257,\n\t\"./ar.js\": 251,\n\t\"./az\": 258,\n\t\"./az.js\": 258,\n\t\"./be\": 259,\n\t\"./be.js\": 259,\n\t\"./bg\": 260,\n\t\"./bg.js\": 260,\n\t\"./bm\": 261,\n\t\"./bm.js\": 261,\n\t\"./bn\": 262,\n\t\"./bn-bd\": 263,\n\t\"./bn-bd.js\": 263,\n\t\"./bn.js\": 262,\n\t\"./bo\": 264,\n\t\"./bo.js\": 264,\n\t\"./br\": 265,\n\t\"./br.js\": 265,\n\t\"./bs\": 266,\n\t\"./bs.js\": 266,\n\t\"./ca\": 267,\n\t\"./ca.js\": 267,\n\t\"./cs\": 268,\n\t\"./cs.js\": 268,\n\t\"./cv\": 269,\n\t\"./cv.js\": 269,\n\t\"./cy\": 270,\n\t\"./cy.js\": 270,\n\t\"./da\": 271,\n\t\"./da.js\": 271,\n\t\"./de\": 272,\n\t\"./de-at\": 273,\n\t\"./de-at.js\": 273,\n\t\"./de-ch\": 274,\n\t\"./de-ch.js\": 274,\n\t\"./de.js\": 272,\n\t\"./dv\": 275,\n\t\"./dv.js\": 275,\n\t\"./el\": 276,\n\t\"./el.js\": 276,\n\t\"./en-au\": 277,\n\t\"./en-au.js\": 277,\n\t\"./en-ca\": 278,\n\t\"./en-ca.js\": 278,\n\t\"./en-gb\": 279,\n\t\"./en-gb.js\": 279,\n\t\"./en-ie\": 280,\n\t\"./en-ie.js\": 280,\n\t\"./en-il\": 281,\n\t\"./en-il.js\": 281,\n\t\"./en-in\": 282,\n\t\"./en-in.js\": 282,\n\t\"./en-nz\": 283,\n\t\"./en-nz.js\": 283,\n\t\"./en-sg\": 284,\n\t\"./en-sg.js\": 284,\n\t\"./eo\": 285,\n\t\"./eo.js\": 285,\n\t\"./es\": 286,\n\t\"./es-do\": 287,\n\t\"./es-do.js\": 287,\n\t\"./es-mx\": 288,\n\t\"./es-mx.js\": 288,\n\t\"./es-us\": 289,\n\t\"./es-us.js\": 289,\n\t\"./es.js\": 286,\n\t\"./et\": 290,\n\t\"./et.js\": 290,\n\t\"./eu\": 291,\n\t\"./eu.js\": 291,\n\t\"./fa\": 292,\n\t\"./fa.js\": 292,\n\t\"./fi\": 293,\n\t\"./fi.js\": 293,\n\t\"./fil\": 294,\n\t\"./fil.js\": 294,\n\t\"./fo\": 295,\n\t\"./fo.js\": 295,\n\t\"./fr\": 296,\n\t\"./fr-ca\": 297,\n\t\"./fr-ca.js\": 297,\n\t\"./fr-ch\": 298,\n\t\"./fr-ch.js\": 298,\n\t\"./fr.js\": 296,\n\t\"./fy\": 299,\n\t\"./fy.js\": 299,\n\t\"./ga\": 300,\n\t\"./ga.js\": 300,\n\t\"./gd\": 301,\n\t\"./gd.js\": 301,\n\t\"./gl\": 302,\n\t\"./gl.js\": 302,\n\t\"./gom-deva\": 303,\n\t\"./gom-deva.js\": 303,\n\t\"./gom-latn\": 304,\n\t\"./gom-latn.js\": 304,\n\t\"./gu\": 305,\n\t\"./gu.js\": 305,\n\t\"./he\": 306,\n\t\"./he.js\": 306,\n\t\"./hi\": 307,\n\t\"./hi.js\": 307,\n\t\"./hr\": 308,\n\t\"./hr.js\": 308,\n\t\"./hu\": 309,\n\t\"./hu.js\": 309,\n\t\"./hy-am\": 310,\n\t\"./hy-am.js\": 310,\n\t\"./id\": 311,\n\t\"./id.js\": 311,\n\t\"./is\": 312,\n\t\"./is.js\": 312,\n\t\"./it\": 313,\n\t\"./it-ch\": 314,\n\t\"./it-ch.js\": 314,\n\t\"./it.js\": 313,\n\t\"./ja\": 315,\n\t\"./ja.js\": 315,\n\t\"./jv\": 316,\n\t\"./jv.js\": 316,\n\t\"./ka\": 317,\n\t\"./ka.js\": 317,\n\t\"./kk\": 318,\n\t\"./kk.js\": 318,\n\t\"./km\": 319,\n\t\"./km.js\": 319,\n\t\"./kn\": 320,\n\t\"./kn.js\": 320,\n\t\"./ko\": 321,\n\t\"./ko.js\": 321,\n\t\"./ku\": 322,\n\t\"./ku.js\": 322,\n\t\"./ky\": 323,\n\t\"./ky.js\": 323,\n\t\"./lb\": 324,\n\t\"./lb.js\": 324,\n\t\"./lo\": 325,\n\t\"./lo.js\": 325,\n\t\"./lt\": 326,\n\t\"./lt.js\": 326,\n\t\"./lv\": 327,\n\t\"./lv.js\": 327,\n\t\"./me\": 328,\n\t\"./me.js\": 328,\n\t\"./mi\": 329,\n\t\"./mi.js\": 329,\n\t\"./mk\": 330,\n\t\"./mk.js\": 330,\n\t\"./ml\": 331,\n\t\"./ml.js\": 331,\n\t\"./mn\": 332,\n\t\"./mn.js\": 332,\n\t\"./mr\": 333,\n\t\"./mr.js\": 333,\n\t\"./ms\": 334,\n\t\"./ms-my\": 335,\n\t\"./ms-my.js\": 335,\n\t\"./ms.js\": 334,\n\t\"./mt\": 336,\n\t\"./mt.js\": 336,\n\t\"./my\": 337,\n\t\"./my.js\": 337,\n\t\"./nb\": 338,\n\t\"./nb.js\": 338,\n\t\"./ne\": 339,\n\t\"./ne.js\": 339,\n\t\"./nl\": 340,\n\t\"./nl-be\": 341,\n\t\"./nl-be.js\": 341,\n\t\"./nl.js\": 340,\n\t\"./nn\": 342,\n\t\"./nn.js\": 342,\n\t\"./oc-lnc\": 343,\n\t\"./oc-lnc.js\": 343,\n\t\"./pa-in\": 344,\n\t\"./pa-in.js\": 344,\n\t\"./pl\": 345,\n\t\"./pl.js\": 345,\n\t\"./pt\": 346,\n\t\"./pt-br\": 347,\n\t\"./pt-br.js\": 347,\n\t\"./pt.js\": 346,\n\t\"./ro\": 348,\n\t\"./ro.js\": 348,\n\t\"./ru\": 349,\n\t\"./ru.js\": 349,\n\t\"./sd\": 350,\n\t\"./sd.js\": 350,\n\t\"./se\": 351,\n\t\"./se.js\": 351,\n\t\"./si\": 352,\n\t\"./si.js\": 352,\n\t\"./sk\": 353,\n\t\"./sk.js\": 353,\n\t\"./sl\": 354,\n\t\"./sl.js\": 354,\n\t\"./sq\": 355,\n\t\"./sq.js\": 355,\n\t\"./sr\": 356,\n\t\"./sr-cyrl\": 357,\n\t\"./sr-cyrl.js\": 357,\n\t\"./sr.js\": 356,\n\t\"./ss\": 358,\n\t\"./ss.js\": 358,\n\t\"./sv\": 359,\n\t\"./sv.js\": 359,\n\t\"./sw\": 360,\n\t\"./sw.js\": 360,\n\t\"./ta\": 361,\n\t\"./ta.js\": 361,\n\t\"./te\": 362,\n\t\"./te.js\": 362,\n\t\"./tet\": 363,\n\t\"./tet.js\": 363,\n\t\"./tg\": 364,\n\t\"./tg.js\": 364,\n\t\"./th\": 365,\n\t\"./th.js\": 365,\n\t\"./tk\": 366,\n\t\"./tk.js\": 366,\n\t\"./tl-ph\": 367,\n\t\"./tl-ph.js\": 367,\n\t\"./tlh\": 368,\n\t\"./tlh.js\": 368,\n\t\"./tr\": 369,\n\t\"./tr.js\": 369,\n\t\"./tzl\": 370,\n\t\"./tzl.js\": 370,\n\t\"./tzm\": 371,\n\t\"./tzm-latn\": 372,\n\t\"./tzm-latn.js\": 372,\n\t\"./tzm.js\": 371,\n\t\"./ug-cn\": 373,\n\t\"./ug-cn.js\": 373,\n\t\"./uk\": 374,\n\t\"./uk.js\": 374,\n\t\"./ur\": 375,\n\t\"./ur.js\": 375,\n\t\"./uz\": 376,\n\t\"./uz-latn\": 377,\n\t\"./uz-latn.js\": 377,\n\t\"./uz.js\": 376,\n\t\"./vi\": 378,\n\t\"./vi.js\": 378,\n\t\"./x-pseudo\": 379,\n\t\"./x-pseudo.js\": 379,\n\t\"./yo\": 380,\n\t\"./yo.js\": 380,\n\t\"./zh-cn\": 381,\n\t\"./zh-cn.js\": 381,\n\t\"./zh-hk\": 382,\n\t\"./zh-hk.js\": 382,\n\t\"./zh-mo\": 383,\n\t\"./zh-mo.js\": 383,\n\t\"./zh-tw\": 384,\n\t\"./zh-tw.js\": 384\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 689;"],"sourceRoot":""}